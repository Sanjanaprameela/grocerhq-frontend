{"ast":null,"code":"import { useState, useEffect, memo } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n} // https://usehooks.com/useScript/\n\n\nfunction useScript(src) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  var _a = useState(src ? 'loading' : 'idle'),\n      status = _a[0],\n      setStatus = _a[1];\n\n  useEffect(function () {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus('idle');\n      return;\n    } // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n\n\n    var script = document.querySelector(\"script[src=\\\"\" + src + \"\\\"]\");\n\n    if (!script) {\n      // Create script\n      script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.setAttribute('data-status', 'loading'); // Add script to document body\n\n      document.body.appendChild(script); // Store status in attribute on script\n      // This can be read by other instances of this hook\n\n      var setAttributeFromEvent = function (event) {\n        !!script && script.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error');\n      };\n\n      script.addEventListener('load', setAttributeFromEvent);\n      script.addEventListener('error', setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute('data-status') || 'idle');\n    } // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n\n\n    var setStateFromEvent = function (event) {\n      setStatus(event.type === 'load' ? 'ready' : 'error');\n    }; // Add event listeners\n\n\n    script.addEventListener('load', setStateFromEvent);\n    script.addEventListener('error', setStateFromEvent); // Remove event listeners on cleanup\n\n    return function () {\n      if (script) {\n        script.removeEventListener('load', setStateFromEvent);\n        script.removeEventListener('error', setStateFromEvent);\n      }\n    };\n  }, [src]);\n  return status;\n}\n\nvar scriptFlag = '__googleOneTapScript__';\nvar googleClientScriptURL = 'https://accounts.google.com/gsi/client';\nvar oauthEndpointURL = 'https://oauth2.googleapis.com/tokeninfo?id_token=';\n\nfunction callback(_a) {\n  var data = _a.data,\n      onError = _a.onError,\n      onSuccess = _a.onSuccess;\n\n  if (data === null || data === void 0 ? void 0 : data.credential) {\n    fetch(\"\" + oauthEndpointURL + data.credential).then(function (resp) {\n      if ((resp === null || resp === void 0 ? void 0 : resp.status) === 200 && (resp === null || resp === void 0 ? void 0 : resp.json)) {\n        return resp.json();\n      } else {\n        if (onError) {\n          onError();\n        }\n\n        throw new Error('Something went wrong');\n      }\n    }).then(function (resp) {\n      if (onSuccess) {\n        onSuccess(resp);\n      }\n    }).catch(function (error) {\n      if (onError) {\n        onError(error);\n      }\n\n      throw error;\n    });\n  }\n}\n\nfunction useGoogleOneTapLogin(_a) {\n  var onError = _a.onError,\n      disabled = _a.disabled,\n      onSuccess = _a.onSuccess,\n      googleAccountConfigs = _a.googleAccountConfigs,\n      _b = _a.disableCancelOnUnmount,\n      disableCancelOnUnmount = _b === void 0 ? false : _b;\n  var script = useScript(googleClientScriptURL); // Use the user's custom callback if they specified one; otherwise use the default one defined above:\n\n  var callbackToUse = googleAccountConfigs.callback ? googleAccountConfigs.callback : function (data) {\n    return callback({\n      data: data,\n      onError: onError,\n      onSuccess: onSuccess\n    });\n  };\n  useEffect(function () {\n    if (!(window === null || window === void 0 ? void 0 : window[scriptFlag]) && window.google && script === 'ready') {\n      window.google.accounts.id.initialize(__assign(__assign({}, googleAccountConfigs), {\n        callback: callbackToUse\n      }));\n      window[scriptFlag] = true;\n    }\n\n    if ((window === null || window === void 0 ? void 0 : window[scriptFlag]) && script === 'ready' && !disabled) {\n      window.google.accounts.id.prompt();\n      return function () {\n        if (!disableCancelOnUnmount) {\n          window.google.accounts.id.cancel();\n        }\n      };\n    }\n  }, [script, window === null || window === void 0 ? void 0 : window[scriptFlag], disabled]);\n  return null;\n}\n\nfunction GoogleOneTapLogin(_a) {\n  var _b = _a.children,\n      children = _b === void 0 ? null : _b,\n      props = __rest(_a, [\"children\"]);\n\n  useGoogleOneTapLogin(props);\n  return children;\n}\n\nvar index = memo(GoogleOneTapLogin);\nexport default index;\nexport { useGoogleOneTapLogin };","map":{"version":3,"mappings":"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","names":["useScript","src","useState","status","setStatus","useEffect","script","document","querySelector","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener","scriptFlag","googleClientScriptURL","oauthEndpointURL","callback","_a","data","onError","onSuccess","credential","fetch","then","resp","json","Error","catch","error","useGoogleOneTapLogin","disabled","googleAccountConfigs","_b","disableCancelOnUnmount","callbackToUse","window","google","accounts","id","initialize","__assign","prompt","cancel","GoogleOneTapLogin","props","children","memo"],"sources":["/Users/sanjana/Desktop/Capstone/Capstone_Final_deploy/frontend_git/grocerhq-frontend/node_modules/react-google-one-tap-login/src/useScript.ts","/Users/sanjana/Desktop/Capstone/Capstone_Final_deploy/frontend_git/grocerhq-frontend/node_modules/react-google-one-tap-login/src/useGoogleOneTapLogin.ts","/Users/sanjana/Desktop/Capstone/Capstone_Final_deploy/frontend_git/grocerhq-frontend/node_modules/react-google-one-tap-login/src/index.ts"],"sourcesContent":["// https://usehooks.com/useScript/\nimport { useState, useEffect } from 'react';\n\nexport default function useScript(src: string): string {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState<string>(src ? 'loading' : 'idle');\n\n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus('idle');\n        return;\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script: HTMLScriptElement | null = document.querySelector(\n        `script[src=\"${src}\"]`,\n      );\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script');\n        script.src = src;\n        script.async = true;\n        script.setAttribute('data-status', 'loading');\n        // Add script to document body\n        document.body.appendChild(script);\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          !!script &&\n            script.setAttribute(\n              'data-status',\n              event.type === 'load' ? 'ready' : 'error',\n            );\n        };\n\n        script.addEventListener('load', setAttributeFromEvent);\n        script.addEventListener('error', setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') || 'idle');\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error');\n      };\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent);\n      script.addEventListener('error', setStateFromEvent);\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent);\n          script.removeEventListener('error', setStateFromEvent);\n        }\n      };\n    },\n    [src], // Only re-run effect if script src changes\n  );\n\n  return status;\n}\n","import { useEffect } from 'react';\nimport {\n  IUseGoogleOneTapLogin,\n  IGoogleCallbackResponse,\n  IGoogleEndPointResponse,\n} from './types';\nimport useScript from './useScript';\n\nconst scriptFlag: string = '__googleOneTapScript__';\nconst googleClientScriptURL: string = 'https://accounts.google.com/gsi/client';\nconst oauthEndpointURL: string =\n  'https://oauth2.googleapis.com/tokeninfo?id_token=';\n\nfunction callback({\n  data,\n  onError,\n  onSuccess,\n}: {\n  data: IGoogleCallbackResponse;\n  onError?: IUseGoogleOneTapLogin['onError'];\n  onSuccess?: IUseGoogleOneTapLogin['onSuccess'];\n}) {\n  if (data?.credential) {\n    fetch(`${oauthEndpointURL}${data.credential}`)\n      .then((resp) => {\n        if (resp?.status === 200 && resp?.json) {\n          return resp.json();\n        } else {\n          if (onError) {\n            onError();\n          }\n          throw new Error('Something went wrong');\n        }\n      })\n      .then((resp: IGoogleEndPointResponse) => {\n        if (onSuccess) {\n          onSuccess(resp);\n        }\n      })\n      .catch((error) => {\n        if (onError) {\n          onError(error);\n        }\n        throw error;\n      });\n  }\n}\n\nexport function useGoogleOneTapLogin({\n  onError,\n  disabled,\n  onSuccess,\n  googleAccountConfigs,\n  disableCancelOnUnmount = false,\n}: IUseGoogleOneTapLogin) {\n  const script = useScript(googleClientScriptURL);\n  // Use the user's custom callback if they specified one; otherwise use the default one defined above:\n  const callbackToUse = googleAccountConfigs.callback\n    ? googleAccountConfigs.callback\n    : (data: IGoogleCallbackResponse) => callback({ data, onError, onSuccess });\n\n  useEffect(() => {\n    if (!window?.[scriptFlag] && window.google && script === 'ready') {\n      window.google.accounts.id.initialize({\n        ...googleAccountConfigs,\n        callback: callbackToUse,\n      });\n      window[scriptFlag] = true;\n    }\n    if (window?.[scriptFlag] && script === 'ready' && !disabled) {\n      window.google.accounts.id.prompt();\n\n      return () => {\n        if (!disableCancelOnUnmount) {\n          window.google.accounts.id.cancel();\n        }\n      };\n    }\n  }, [script, window?.[scriptFlag], disabled]);\n\n  return null;\n}\n","import { memo } from 'react';\nimport { IGoogleOneTapLogin } from './types';\nimport { useGoogleOneTapLogin } from './useGoogleOneTapLogin';\n\nfunction GoogleOneTapLogin({ children = null, ...props }: IGoogleOneTapLogin) {\n  useGoogleOneTapLogin(props);\n  return children;\n}\n\nexport default memo(GoogleOneTapLogin);\n\nexport { useGoogleOneTapLogin };\n"]},"metadata":{},"sourceType":"module"}